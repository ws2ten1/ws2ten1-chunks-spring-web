buildscript {
	repositories {
		jcenter()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotlessPluginVersion"
		classpath "de.thetaphi:forbiddenapis:2.7"
		classpath "de.aaschmid:gradle-cpd-plugin:3.0"
		classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:$spotbugsPluginVersion"
	}
}

plugins {
	id 'java-library'
	id 'org.springframework.boot' version '2.2.0.RELEASE'
	id 'com.jfrog.bintray' version '1.8.4'
	id 'maven-publish'
	id 'com.github.spotbugs' version '2.0.1' apply false
}

// basic plugins
apply plugin: 'io.spring.dependency-management'

// code quality plugins
apply plugin: "checkstyle"
apply plugin: "com.github.spotbugs"
apply plugin: "pmd"
apply plugin: "cpd"
apply plugin: "jacoco"
apply plugin: "de.thetaphi.forbiddenapis"
apply plugin: "com.diffplug.gradle.spotless"

// code quality configuration
apply from: "${rootProject.projectDir}/config/checkstyle.gradle"
apply from: "${rootProject.projectDir}/config/spotbugs.gradle"
apply from: "${rootProject.projectDir}/config/pmd.gradle"
apply from: "${rootProject.projectDir}/config/cpd.gradle"
apply from: "${rootProject.projectDir}/config/jacoco.gradle"
apply from: "${rootProject.projectDir}/config/forbiddenapis.gradle"
apply from: "${rootProject.projectDir}/config/spotless.gradle"

// custom configuration
apply from: "${rootProject.projectDir}/gradle/version.gradle"
apply from: "${rootProject.projectDir}/gradle/sourceArtifact.gradle"
apply from: "${rootProject.projectDir}/gradle/bintray.gradle"

group = 'org.ws2ten1'

// compiler
sourceCompatibility = '1.8'

compileJava {
	options.compilerArgs << "-Werror"
	options.compilerArgs << "-Xlint:all" << "-Xlint:-processing" << "-Xlint:-deprecation"
}

repositories {
	jcenter()
	mavenCentral()
	maven { url 'https://dl.bintray.com/ws2ten1/maven-release' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	// implementation 'org.springframework.data:spring-data-commons'
	implementation 'org.springframework:spring-web' // optional to use ChunkableHandlerMethodArgumentResolver
	
	api 'org.ws2ten1:ws2ten1-chunks:1.0.0-rc11'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework:spring-web'
}

bootJar {
	enabled = false
}

jar {
	enabled = true
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
	reports {
		html {
			enabled = true
		}
		xml {
			enabled = false
		}
	}
}
